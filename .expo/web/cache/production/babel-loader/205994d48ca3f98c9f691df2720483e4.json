{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.googleMapIsInstalled=exports.createNotSupportedComponent=exports.getNativeMapName=exports.ProviderContext=exports.NOT_SUPPORTED=exports.USES_DEFAULT_IMPLEMENTATION=exports.SUPPORTED=void 0;var react_1=require(\"react\");var react_native_1=require(\"react-native-web/dist/index\");var ProviderConstants_1=require(\"./ProviderConstants\");exports.SUPPORTED='SUPPORTED';exports.USES_DEFAULT_IMPLEMENTATION='USES_DEFAULT_IMPLEMENTATION';exports.NOT_SUPPORTED='NOT_SUPPORTED';exports.ProviderContext=(0,react_1.createContext)(undefined);function getNativeMapName(provider){if(react_native_1.Platform.OS==='android'){return'AIRMap';}if(provider===ProviderConstants_1.PROVIDER_GOOGLE){return'AIRGoogleMap';}return'AIRMap';}exports.getNativeMapName=getNativeMapName;function getNativeComponentName(provider,component){return\"\"+getNativeMapName(provider)+component;}var createNotSupportedComponent=function createNotSupportedComponent(message){return function(){console.error(message);return null;};};exports.createNotSupportedComponent=createNotSupportedComponent;exports.googleMapIsInstalled=!!react_native_1.UIManager.getViewManagerConfig(getNativeMapName(ProviderConstants_1.PROVIDER_GOOGLE));function decorateMapComponent(Component,componentName,providers){var components={};var getDefaultComponent=function getDefaultComponent(){return(0,react_native_1.requireNativeComponent)(getNativeComponentName(undefined,componentName));};Component.contextType=exports.ProviderContext;Component.prototype.getNativeComponent=function getNativeComponent(){var provider=this.context;var key=provider||'default';if(components[key]){return components[key];}if(provider===ProviderConstants_1.PROVIDER_DEFAULT){components[key]=getDefaultComponent();return components[key];}var providerInfo=providers[provider];if(react_native_1.Platform.OS!=='android'&&react_native_1.Platform.OS!=='ios'){throw new Error(\"react-native-maps doesn't support \"+react_native_1.Platform.OS);}var platformSupport=providerInfo[react_native_1.Platform.OS];var nativeComponentName=getNativeComponentName(provider,componentName);if(platformSupport===exports.NOT_SUPPORTED){components[key]=(0,exports.createNotSupportedComponent)(\"react-native-maps: \"+nativeComponentName+\" is not supported on \"+react_native_1.Platform.OS);}else if(platformSupport===exports.SUPPORTED){if(provider!==ProviderConstants_1.PROVIDER_GOOGLE||react_native_1.Platform.OS==='ios'&&exports.googleMapIsInstalled){components[key]=(0,react_native_1.requireNativeComponent)(nativeComponentName);}}else{if(!components.default){components.default=getDefaultComponent();}components[key]=components.default;}return components[key];};Component.prototype.getUIManagerCommand=function getUIManagerCommand(name){var nativeComponentName=getNativeComponentName(this.context,componentName);return react_native_1.UIManager.getViewManagerConfig(nativeComponentName).Commands[name];};Component.prototype.getMapManagerCommand=function getMapManagerCommand(name){var nativeComponentName=getNativeComponentName(this.context,componentName)+\"Manager\";return react_native_1.NativeModules[nativeComponentName][name];};return Component;}exports.default=decorateMapComponent;","map":{"version":3,"names":["Object","defineProperty","exports","value","googleMapIsInstalled","createNotSupportedComponent","getNativeMapName","ProviderContext","NOT_SUPPORTED","USES_DEFAULT_IMPLEMENTATION","SUPPORTED","react_1","require","ProviderConstants_1","createContext","undefined","provider","react_native_1","Platform","OS","PROVIDER_GOOGLE","getNativeComponentName","component","message","console","error","UIManager","getViewManagerConfig","decorateMapComponent","Component","componentName","providers","components","getDefaultComponent","requireNativeComponent","contextType","prototype","getNativeComponent","context","key","PROVIDER_DEFAULT","providerInfo","Error","platformSupport","nativeComponentName","default","getUIManagerCommand","name","Commands","getMapManagerCommand","NativeModules"],"sources":["/Users/yamistudio/projects/React-native/foody-react-native/node_modules/react-native-maps/lib/decorateMapComponent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleMapIsInstalled = exports.createNotSupportedComponent = exports.getNativeMapName = exports.ProviderContext = exports.NOT_SUPPORTED = exports.USES_DEFAULT_IMPLEMENTATION = exports.SUPPORTED = void 0;\nconst react_1 = require(\"react\");\nconst react_native_1 = require(\"react-native\");\nconst ProviderConstants_1 = require(\"./ProviderConstants\");\nexports.SUPPORTED = 'SUPPORTED';\nexports.USES_DEFAULT_IMPLEMENTATION = 'USES_DEFAULT_IMPLEMENTATION';\nexports.NOT_SUPPORTED = 'NOT_SUPPORTED';\nexports.ProviderContext = (0, react_1.createContext)(undefined);\nfunction getNativeMapName(provider) {\n    if (react_native_1.Platform.OS === 'android') {\n        return 'AIRMap';\n    }\n    if (provider === ProviderConstants_1.PROVIDER_GOOGLE) {\n        return 'AIRGoogleMap';\n    }\n    return 'AIRMap';\n}\nexports.getNativeMapName = getNativeMapName;\nfunction getNativeComponentName(provider, component) {\n    return `${getNativeMapName(provider)}${component}`;\n}\nconst createNotSupportedComponent = (message) => () => {\n    console.error(message);\n    return null;\n};\nexports.createNotSupportedComponent = createNotSupportedComponent;\nexports.googleMapIsInstalled = !!react_native_1.UIManager.getViewManagerConfig(getNativeMapName(ProviderConstants_1.PROVIDER_GOOGLE));\nfunction decorateMapComponent(Component, componentName, providers) {\n    const components = {};\n    const getDefaultComponent = () => (0, react_native_1.requireNativeComponent)(getNativeComponentName(undefined, componentName));\n    Component.contextType = exports.ProviderContext;\n    Component.prototype.getNativeComponent =\n        function getNativeComponent() {\n            const provider = this.context;\n            const key = provider || 'default';\n            if (components[key]) {\n                return components[key];\n            }\n            if (provider === ProviderConstants_1.PROVIDER_DEFAULT) {\n                components[key] = getDefaultComponent();\n                return components[key];\n            }\n            const providerInfo = providers[provider];\n            // quick fix. Previous code assumed android | ios\n            if (react_native_1.Platform.OS !== 'android' && react_native_1.Platform.OS !== 'ios') {\n                throw new Error(`react-native-maps doesn't support ${react_native_1.Platform.OS}`);\n            }\n            const platformSupport = providerInfo[react_native_1.Platform.OS];\n            const nativeComponentName = getNativeComponentName(provider, componentName);\n            if (platformSupport === exports.NOT_SUPPORTED) {\n                components[key] = (0, exports.createNotSupportedComponent)(`react-native-maps: ${nativeComponentName} is not supported on ${react_native_1.Platform.OS}`);\n            }\n            else if (platformSupport === exports.SUPPORTED) {\n                if (provider !== ProviderConstants_1.PROVIDER_GOOGLE ||\n                    (react_native_1.Platform.OS === 'ios' && exports.googleMapIsInstalled)) {\n                    components[key] = (0, react_native_1.requireNativeComponent)(nativeComponentName);\n                }\n            }\n            else {\n                // (platformSupport === USES_DEFAULT_IMPLEMENTATION)\n                if (!components.default) {\n                    components.default = getDefaultComponent();\n                }\n                components[key] = components.default;\n            }\n            return components[key];\n        };\n    Component.prototype.getUIManagerCommand = function getUIManagerCommand(name) {\n        const nativeComponentName = getNativeComponentName(this.context, componentName);\n        return react_native_1.UIManager.getViewManagerConfig(nativeComponentName).Commands[name];\n    };\n    Component.prototype.getMapManagerCommand = function getMapManagerCommand(name) {\n        const nativeComponentName = `${getNativeComponentName(this.context, componentName)}Manager`;\n        return react_native_1.NativeModules[nativeComponentName][name];\n    };\n    return Component;\n}\nexports.default = decorateMapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
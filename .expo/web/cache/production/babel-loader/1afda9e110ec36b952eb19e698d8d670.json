{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _reactNative=require(\"react-native-web/dist/index\");var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30};var Mixin=_reactNative.Touchable.Mixin;var _touchableHandleStartShouldSetResponder=Mixin.touchableHandleStartShouldSetResponder,_touchableHandleResponderTerminationRequest=Mixin.touchableHandleResponderTerminationRequest,_touchableHandleResponderGrant=Mixin.touchableHandleResponderGrant,_touchableHandleResponderMove=Mixin.touchableHandleResponderMove,_touchableHandleResponderRelease=Mixin.touchableHandleResponderRelease,_touchableHandleResponderTerminate=Mixin.touchableHandleResponderTerminate,touchableGetInitialState=Mixin.touchableGetInitialState;var SvgTouchableMixin=(0,_extends2.default)({},Mixin,{touchableHandleStartShouldSetResponder:function touchableHandleStartShouldSetResponder(e){var onStartShouldSetResponder=this.props.onStartShouldSetResponder;if(onStartShouldSetResponder){return onStartShouldSetResponder(e);}else{return _touchableHandleStartShouldSetResponder.call(this,e);}},touchableHandleResponderTerminationRequest:function touchableHandleResponderTerminationRequest(e){var onResponderTerminationRequest=this.props.onResponderTerminationRequest;if(onResponderTerminationRequest){return onResponderTerminationRequest(e);}else{return _touchableHandleResponderTerminationRequest.call(this,e);}},touchableHandleResponderGrant:function touchableHandleResponderGrant(e){var onResponderGrant=this.props.onResponderGrant;if(onResponderGrant){return onResponderGrant(e);}else{return _touchableHandleResponderGrant.call(this,e);}},touchableHandleResponderMove:function touchableHandleResponderMove(e){var onResponderMove=this.props.onResponderMove;if(onResponderMove){return onResponderMove(e);}else{return _touchableHandleResponderMove.call(this,e);}},touchableHandleResponderRelease:function touchableHandleResponderRelease(e){var onResponderRelease=this.props.onResponderRelease;if(onResponderRelease){return onResponderRelease(e);}else{return _touchableHandleResponderRelease.call(this,e);}},touchableHandleResponderTerminate:function touchableHandleResponderTerminate(e){var onResponderTerminate=this.props.onResponderTerminate;if(onResponderTerminate){return onResponderTerminate(e);}else{return _touchableHandleResponderTerminate.call(this,e);}},touchableHandlePress:function touchableHandlePress(e){var onPress=this.props.onPress;onPress&&onPress(e);},touchableHandleActivePressIn:function touchableHandleActivePressIn(e){var onPressIn=this.props.onPressIn;onPressIn&&onPressIn(e);},touchableHandleActivePressOut:function touchableHandleActivePressOut(e){var onPressOut=this.props.onPressOut;onPressOut&&onPressOut(e);},touchableHandleLongPress:function touchableHandleLongPress(e){var onLongPress=this.props.onLongPress;onLongPress&&onLongPress(e);},touchableGetPressRectOffset:function touchableGetPressRectOffset(){var pressRetentionOffset=this.props.pressRetentionOffset;return pressRetentionOffset||PRESS_RETENTION_OFFSET;},touchableGetHitSlop:function touchableGetHitSlop(){var hitSlop=this.props.hitSlop;return hitSlop;},touchableGetHighlightDelayMS:function touchableGetHighlightDelayMS(){var delayPressIn=this.props.delayPressIn;return delayPressIn||0;},touchableGetLongPressDelayMS:function touchableGetLongPressDelayMS(){var delayLongPress=this.props.delayLongPress;return delayLongPress===0?0:delayLongPress||500;},touchableGetPressOutDelayMS:function touchableGetPressOutDelayMS(){var delayPressOut=this.props.delayPressOut;return delayPressOut||0;}});var touchKeys=Object.keys(SvgTouchableMixin);var touchVals=touchKeys.map(function(key){return SvgTouchableMixin[key];});var numTouchKeys=touchKeys.length;var _default=function _default(target){for(var i=0;i<numTouchKeys;i++){var key=touchKeys[i];var val=touchVals[i];if(typeof val==='function'){target[key]=val.bind(target);}else{target[key]=val;}}target.state=touchableGetInitialState();};exports.default=_default;","map":{"version":3,"mappings":"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","names":["PRESS_RETENTION_OFFSET","top","left","right","bottom","Mixin","Touchable","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableGetInitialState","SvgTouchableMixin","e","onStartShouldSetResponder","props","call","onResponderTerminationRequest","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","touchableHandlePress","onPress","touchableHandleActivePressIn","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut","touchKeys","Object","keys","touchVals","map","key","numTouchKeys","length","target","i","val","bind","state"],"sources":["SvgTouchableMixin.ts"],"sourcesContent":["// @ts-ignore\nimport { Touchable, GestureResponderEvent } from 'react-native';\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n// @ts-ignore\nconst { Mixin } = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n  touchableGetInitialState,\n} = Mixin;\n\nconst SvgTouchableMixin = {\n  ...Mixin,\n\n  touchableHandleStartShouldSetResponder(e: GestureResponderEvent) {\n    const { onStartShouldSetResponder } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminationRequest(e: GestureResponderEvent) {\n    const { onResponderTerminationRequest } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n\n  touchableHandleResponderGrant(e: GestureResponderEvent) {\n    const { onResponderGrant } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n\n  touchableHandleResponderMove(e: GestureResponderEvent) {\n    const { onResponderMove } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n\n  touchableHandleResponderRelease(e: GestureResponderEvent) {\n    const { onResponderRelease } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminate(e: GestureResponderEvent) {\n    const { onResponderTerminate } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n\n  touchableHandlePress(e: GestureResponderEvent) {\n    const { onPress } = this.props;\n    onPress && onPress(e);\n  },\n\n  touchableHandleActivePressIn(e: GestureResponderEvent) {\n    const { onPressIn } = this.props;\n    onPressIn && onPressIn(e);\n  },\n\n  touchableHandleActivePressOut(e: GestureResponderEvent) {\n    const { onPressOut } = this.props;\n    onPressOut && onPressOut(e);\n  },\n\n  touchableHandleLongPress(e: GestureResponderEvent) {\n    const { onLongPress } = this.props;\n    onLongPress && onLongPress(e);\n  },\n\n  touchableGetPressRectOffset() {\n    const { pressRetentionOffset } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop() {\n    const { hitSlop } = this.props;\n    return hitSlop;\n  },\n\n  touchableGetHighlightDelayMS() {\n    const { delayPressIn } = this.props;\n    return delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS() {\n    const { delayLongPress } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS() {\n    const { delayPressOut } = this.props;\n    return delayPressOut || 0;\n  },\n};\n\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map((key) => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\n\nexport default (target: { [x: string]: unknown; state: unknown }) => {\n  for (let i = 0; i < numTouchKeys; i++) {\n    const key = touchKeys[i];\n    const val = touchVals[i];\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n  target.state = touchableGetInitialState();\n};\n"]},"metadata":{},"sourceType":"script"}
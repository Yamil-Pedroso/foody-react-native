{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _reactJsxRuntime=require(\"react/jsx-runtime\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function get(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod){if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);}__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});var React=__importStar(require(\"react\"));var MapMarker_1=__importDefault(require(\"./MapMarker\"));var MapPolyline_1=__importDefault(require(\"./MapPolyline\"));var MapPolygon_1=__importDefault(require(\"./MapPolygon\"));var Geojson=function Geojson(props){var geojson=props.geojson,strokeColor=props.strokeColor,fillColor=props.fillColor,strokeWidth=props.strokeWidth,color=props.color,title=props.title,image=props.image,zIndex=props.zIndex,_onPress=props.onPress,lineCap=props.lineCap,lineJoin=props.lineJoin,tappable=props.tappable,tracksViewChanges=props.tracksViewChanges,miterLimit=props.miterLimit,lineDashPhase=props.lineDashPhase,lineDashPattern=props.lineDashPattern,markerComponent=props.markerComponent;var pointOverlays=makePointOverlays(geojson.features);var lineOverlays=makeLineOverlays(geojson.features);var polygonOverlays=makePolygonOverlays(geojson.features);return _reactJsxRuntime.jsxs(React.Fragment,{children:[pointOverlays.map(function(overlay,index){var _overlay$feature$prop;var markerColor=getColor(color,overlay,'marker-color');var pointOverlayTracksViewChanges=((_overlay$feature$prop=overlay.feature.properties)==null?void 0:_overlay$feature$prop.tracksViewChanges)||tracksViewChanges;return _reactJsxRuntime.jsx(MapMarker_1.default,{coordinate:overlay.coordinates,tracksViewChanges:pointOverlayTracksViewChanges,image:image,title:title,pinColor:markerColor,zIndex:zIndex,onPress:function onPress(){return _onPress&&_onPress(overlay);},children:markerComponent},index);}),lineOverlays.map(function(overlay,index){var lineStrokeColor=getColor(strokeColor,overlay,'stroke');var lineStrokeWidth=getStrokeWidth(strokeWidth,overlay);return _reactJsxRuntime.jsx(MapPolyline_1.default,{coordinates:overlay.coordinates,strokeColor:lineStrokeColor,strokeWidth:lineStrokeWidth,lineDashPhase:lineDashPhase,lineDashPattern:lineDashPattern,lineCap:lineCap,lineJoin:lineJoin,miterLimit:miterLimit,zIndex:zIndex,tappable:tappable,onPress:function onPress(){return _onPress&&_onPress(overlay);}},index);}),polygonOverlays.map(function(overlay,index){var polygonFillColor=getColor(fillColor,overlay,'fill');var lineStrokeColor=getColor(strokeColor,overlay,'stroke');var lineStrokeWidth=getStrokeWidth(strokeWidth,overlay);return _reactJsxRuntime.jsx(MapPolygon_1.default,{coordinates:overlay.coordinates,holes:overlay.holes,strokeColor:lineStrokeColor,fillColor:polygonFillColor,strokeWidth:lineStrokeWidth,tappable:tappable,onPress:function onPress(){return _onPress&&_onPress(overlay);},zIndex:zIndex},index);})]});};exports.default=Geojson;var makePointOverlays=function makePointOverlays(features){return features.filter(isAnyPointFeature).map(function(feature){return makeCoordinatesForAnyPoint(feature.geometry).map(function(coordinates){return makeOverlayForAnyPoint(coordinates,feature);});}).reduce(function(prev,curr){return prev.concat(curr);},[]).map(function(overlay){return _objectSpread(_objectSpread({},overlay),{},{type:'point'});});};var makeLineOverlays=function makeLineOverlays(features){return features.filter(isAnyLineStringFeature).map(function(feature){return makeCoordinatesForAnyLine(feature.geometry).map(function(coordinates){return makeOverlayForAnyLine(coordinates,feature);});}).reduce(function(prev,curr){return prev.concat(curr);},[]).map(function(overlay){return _objectSpread(_objectSpread({},overlay),{},{type:'polyline'});});};var makePolygonOverlays=function makePolygonOverlays(features){var multipolygons=features.filter(isMultiPolygonFeature).map(function(feature){return makeCoordinatesForMultiPolygon(feature.geometry).map(function(coordinates){return makeOverlayForAnyPolygon(coordinates,feature);});}).reduce(function(prev,curr){return prev.concat(curr);},[]).map(function(overlay){return _objectSpread(_objectSpread({},overlay),{},{type:'polygon'});});var polygons=features.filter(isPolygonFeature).map(function(feature){return makeOverlayForAnyPolygon(makeCoordinatesForPolygon(feature.geometry),feature);}).reduce(function(prev,curr){return prev.concat(curr);},[]).map(function(overlay){return _objectSpread(_objectSpread({},overlay),{},{type:'polygon'});});return polygons.concat(multipolygons);};var makeOverlayForAnyPoint=function makeOverlayForAnyPoint(coordinates,feature){return{feature:feature,coordinates:coordinates};};var makeOverlayForAnyLine=function makeOverlayForAnyLine(coordinates,feature){return{feature:feature,coordinates:coordinates};};var makeOverlayForAnyPolygon=function makeOverlayForAnyPolygon(coordinates,feature){return{feature:feature,coordinates:coordinates[0],holes:coordinates.length>1?coordinates.slice(1):undefined};};var makePoint=function makePoint(c){return{latitude:c[1],longitude:c[0]};};var makeLine=function makeLine(l){return l.map(makePoint);};var makeCoordinatesForAnyPoint=function makeCoordinatesForAnyPoint(geometry){if(geometry.type==='Point'){return[makePoint(geometry.coordinates)];}return geometry.coordinates.map(makePoint);};var makeCoordinatesForAnyLine=function makeCoordinatesForAnyLine(geometry){if(geometry.type==='LineString'){return[makeLine(geometry.coordinates)];}return geometry.coordinates.map(makeLine);};var makeCoordinatesForPolygon=function makeCoordinatesForPolygon(geometry){return geometry.coordinates.map(makeLine);};var makeCoordinatesForMultiPolygon=function makeCoordinatesForMultiPolygon(geometry){return geometry.coordinates.map(function(p){return p.map(makeLine);});};var getRgbaFromHex=function getRgbaFromHex(hex){var alpha=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var matchArray=hex.match(/\\w\\w/g);if(!matchArray||matchArray.length<3){throw new Error('Invalid hex string');}var _matchArray$map=matchArray.map(function(x){var subColor=parseInt(x,16);if(Number.isNaN(subColor)){throw new Error('Invalid hex string');}return subColor;}),_matchArray$map2=_slicedToArray(_matchArray$map,3),r=_matchArray$map2[0],g=_matchArray$map2[1],b=_matchArray$map2[2];return\"rgba(\"+r+\",\"+g+\",\"+b+\",\"+alpha+\")\";};var getColor=function getColor(prop,overlay,colorType){var _overlay$feature$prop2;if(prop){return prop;}var color=(_overlay$feature$prop2=overlay.feature.properties)==null?void 0:_overlay$feature$prop2[colorType];if(color){var _overlay$feature$prop3;var opacityProperty=colorType+'-opacity';var alpha=(_overlay$feature$prop3=overlay.feature.properties)==null?void 0:_overlay$feature$prop3[opacityProperty];if(alpha&&alpha!=='0'&&color[0]==='#'){color=getRgbaFromHex(color,alpha);}return color;}return undefined;};var getStrokeWidth=function getStrokeWidth(prop,overlay){var _overlay$feature$prop4;if(prop){return prop;}return(_overlay$feature$prop4=overlay.feature.properties)==null?void 0:_overlay$feature$prop4['stroke-width'];};var isPointFeature=function isPointFeature(feature){return feature.geometry.type==='Point';};var isMultiPointFeature=function isMultiPointFeature(feature){return feature.geometry.type==='MultiPoint';};var isAnyPointFeature=function isAnyPointFeature(feature){return isPointFeature(feature)||isMultiPointFeature(feature);};var isLineStringFeature=function isLineStringFeature(feature){return feature.geometry.type==='LineString';};var isMultiLineStringFeature=function isMultiLineStringFeature(feature){return feature.geometry.type==='MultiLineString';};var isAnyLineStringFeature=function isAnyLineStringFeature(feature){return isLineStringFeature(feature)||isMultiLineStringFeature(feature);};var isPolygonFeature=function isPolygonFeature(feature){return feature.geometry.type==='Polygon';};var isMultiPolygonFeature=function isMultiPolygonFeature(feature){return feature.geometry.type==='MultiPolygon';};","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","React","require","MapMarker_1","MapPolyline_1","MapPolygon_1","Geojson","props","geojson","strokeColor","fillColor","strokeWidth","color","title","image","zIndex","onPress","lineCap","lineJoin","tappable","tracksViewChanges","miterLimit","lineDashPhase","lineDashPattern","markerComponent","pointOverlays","makePointOverlays","features","lineOverlays","makeLineOverlays","polygonOverlays","makePolygonOverlays","map","overlay","index","markerColor","getColor","pointOverlayTracksViewChanges","feature","properties","coordinates","lineStrokeColor","lineStrokeWidth","getStrokeWidth","polygonFillColor","holes","default","filter","isAnyPointFeature","makeCoordinatesForAnyPoint","geometry","makeOverlayForAnyPoint","reduce","prev","curr","concat","type","isAnyLineStringFeature","makeCoordinatesForAnyLine","makeOverlayForAnyLine","multipolygons","isMultiPolygonFeature","makeCoordinatesForMultiPolygon","makeOverlayForAnyPolygon","polygons","isPolygonFeature","makeCoordinatesForPolygon","length","slice","makePoint","c","latitude","longitude","makeLine","l","p","getRgbaFromHex","hex","alpha","matchArray","match","Error","x","subColor","parseInt","Number","isNaN","r","g","b","prop","colorType","opacityProperty","isPointFeature","isMultiPointFeature","isLineStringFeature","isMultiLineStringFeature"],"sources":["/Users/yamistudio/projects/React-native/foody-react-native/node_modules/react-native-maps/lib/Geojson.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nconst MapMarker_1 = __importDefault(require(\"./MapMarker\"));\nconst MapPolyline_1 = __importDefault(require(\"./MapPolyline\"));\nconst MapPolygon_1 = __importDefault(require(\"./MapPolygon\"));\nconst Geojson = (props) => {\n    const { geojson, strokeColor, fillColor, strokeWidth, color, title, image, zIndex, onPress, lineCap, lineJoin, tappable, tracksViewChanges, miterLimit, lineDashPhase, lineDashPattern, markerComponent, } = props;\n    const pointOverlays = makePointOverlays(geojson.features);\n    const lineOverlays = makeLineOverlays(geojson.features);\n    const polygonOverlays = makePolygonOverlays(geojson.features);\n    return (<React.Fragment>\n      {pointOverlays.map((overlay, index) => {\n            const markerColor = getColor(color, overlay, 'marker-color');\n            const pointOverlayTracksViewChanges = overlay.feature.properties?.tracksViewChanges || tracksViewChanges;\n            return (<MapMarker_1.default key={index} coordinate={overlay.coordinates} tracksViewChanges={pointOverlayTracksViewChanges} image={image} title={title} pinColor={markerColor} zIndex={zIndex} onPress={() => onPress && onPress(overlay)}>\n            {markerComponent}\n          </MapMarker_1.default>);\n        })}\n      {lineOverlays.map((overlay, index) => {\n            const lineStrokeColor = getColor(strokeColor, overlay, 'stroke');\n            const lineStrokeWidth = getStrokeWidth(strokeWidth, overlay);\n            return (<MapPolyline_1.default key={index} coordinates={overlay.coordinates} strokeColor={lineStrokeColor} strokeWidth={lineStrokeWidth} lineDashPhase={lineDashPhase} lineDashPattern={lineDashPattern} lineCap={lineCap} lineJoin={lineJoin} miterLimit={miterLimit} zIndex={zIndex} tappable={tappable} onPress={() => onPress && onPress(overlay)}/>);\n        })}\n      {polygonOverlays.map((overlay, index) => {\n            const polygonFillColor = getColor(fillColor, overlay, 'fill');\n            const lineStrokeColor = getColor(strokeColor, overlay, 'stroke');\n            const lineStrokeWidth = getStrokeWidth(strokeWidth, overlay);\n            return (<MapPolygon_1.default key={index} coordinates={overlay.coordinates} holes={overlay.holes} strokeColor={lineStrokeColor} fillColor={polygonFillColor} strokeWidth={lineStrokeWidth} tappable={tappable} onPress={() => onPress && onPress(overlay)} zIndex={zIndex}/>);\n        })}\n    </React.Fragment>);\n};\nexports.default = Geojson;\nconst makePointOverlays = (features) => {\n    return features\n        .filter(isAnyPointFeature)\n        .map(feature => makeCoordinatesForAnyPoint(feature.geometry).map(coordinates => makeOverlayForAnyPoint(coordinates, feature)))\n        .reduce((prev, curr) => prev.concat(curr), [])\n        .map(overlay => ({ ...overlay, type: 'point' }));\n};\nconst makeLineOverlays = (features) => {\n    return features\n        .filter(isAnyLineStringFeature)\n        .map(feature => makeCoordinatesForAnyLine(feature.geometry).map(coordinates => makeOverlayForAnyLine(coordinates, feature)))\n        .reduce((prev, curr) => prev.concat(curr), [])\n        .map(overlay => ({ ...overlay, type: 'polyline' }));\n};\nconst makePolygonOverlays = (features) => {\n    const multipolygons = features\n        .filter(isMultiPolygonFeature)\n        .map(feature => makeCoordinatesForMultiPolygon(feature.geometry).map(coordinates => makeOverlayForAnyPolygon(coordinates, feature)))\n        .reduce((prev, curr) => prev.concat(curr), [])\n        .map(overlay => ({ ...overlay, type: 'polygon' }));\n    const polygons = features\n        .filter(isPolygonFeature)\n        .map(feature => makeOverlayForAnyPolygon(makeCoordinatesForPolygon(feature.geometry), feature))\n        .reduce((prev, curr) => prev.concat(curr), [])\n        .map(overlay => ({ ...overlay, type: 'polygon' }));\n    return polygons.concat(multipolygons);\n};\nconst makeOverlayForAnyPoint = (coordinates, feature) => {\n    return { feature, coordinates };\n};\nconst makeOverlayForAnyLine = (coordinates, feature) => {\n    return { feature, coordinates };\n};\nconst makeOverlayForAnyPolygon = (coordinates, feature) => {\n    return {\n        feature,\n        coordinates: coordinates[0],\n        holes: coordinates.length > 1 ? coordinates.slice(1) : undefined,\n    };\n};\nconst makePoint = (c) => ({\n    latitude: c[1],\n    longitude: c[0],\n});\nconst makeLine = (l) => l.map(makePoint);\nconst makeCoordinatesForAnyPoint = (geometry) => {\n    if (geometry.type === 'Point') {\n        return [makePoint(geometry.coordinates)];\n    }\n    return geometry.coordinates.map(makePoint);\n};\nconst makeCoordinatesForAnyLine = (geometry) => {\n    if (geometry.type === 'LineString') {\n        return [makeLine(geometry.coordinates)];\n    }\n    return geometry.coordinates.map(makeLine);\n};\nconst makeCoordinatesForPolygon = (geometry) => {\n    return geometry.coordinates.map(makeLine);\n};\nconst makeCoordinatesForMultiPolygon = (geometry) => {\n    return geometry.coordinates.map(p => p.map(makeLine));\n};\nconst getRgbaFromHex = (hex, alpha = 1) => {\n    const matchArray = hex.match(/\\w\\w/g);\n    if (!matchArray || matchArray.length < 3) {\n        throw new Error('Invalid hex string');\n    }\n    const [r, g, b] = matchArray.map(x => {\n        const subColor = parseInt(x, 16);\n        if (Number.isNaN(subColor)) {\n            throw new Error('Invalid hex string');\n        }\n        return subColor;\n    });\n    return `rgba(${r},${g},${b},${alpha})`;\n};\nconst getColor = (prop, overlay, colorType) => {\n    if (prop) {\n        return prop;\n    }\n    let color = overlay.feature.properties?.[colorType];\n    if (color) {\n        const opacityProperty = colorType + '-opacity';\n        const alpha = overlay.feature.properties?.[opacityProperty];\n        if (alpha && alpha !== '0' && color[0] === '#') {\n            color = getRgbaFromHex(color, alpha);\n        }\n        return color;\n    }\n    return undefined;\n};\nconst getStrokeWidth = (prop, overlay) => {\n    if (prop) {\n        return prop;\n    }\n    return overlay.feature.properties?.['stroke-width'];\n};\n// GeoJSON.Feature type-guards\nconst isPointFeature = (feature) => feature.geometry.type === 'Point';\nconst isMultiPointFeature = (feature) => feature.geometry.type === 'MultiPoint';\nconst isAnyPointFeature = (feature) => isPointFeature(feature) || isMultiPointFeature(feature);\nconst isLineStringFeature = (feature) => feature.geometry.type === 'LineString';\nconst isMultiLineStringFeature = (feature) => feature.geometry.type === 'MultiLineString';\nconst isAnyLineStringFeature = (feature) => isLineStringFeature(feature) || isMultiLineStringFeature(feature);\nconst isPolygonFeature = (feature) => feature.geometry.type === 'Polygon';\nconst isMultiPolygonFeature = (feature) => feature.geometry.type === 'MultiPolygon';\n"],"mappings":"AAAA,YAAY,CAAC,+7BACb,GAAIA,gBAAe,CAAI,IAAI,EAAI,IAAI,CAACA,eAAe,GAAMC,MAAM,CAACC,MAAM,CAAI,SAASC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,EAAE,CAAE,CAC5F,GAAIA,EAAE,GAAKC,SAAS,CAAED,EAAE,CAAGD,CAAC,CAC5B,GAAIG,KAAI,CAAGP,MAAM,CAACQ,wBAAwB,CAACL,CAAC,CAAEC,CAAC,CAAC,CAChD,GAAI,CAACG,IAAI,GAAK,KAAK,EAAIA,KAAI,CAAG,CAACJ,CAAC,CAACM,UAAU,CAAGF,IAAI,CAACG,QAAQ,EAAIH,IAAI,CAACI,YAAY,CAAC,CAAE,CACjFJ,IAAI,CAAG,CAAEK,UAAU,CAAE,IAAI,CAAEC,GAAG,CAAE,cAAW,CAAE,MAAOV,EAAC,CAACC,CAAC,CAAC,CAAE,CAAE,CAAC,CAC/D,CACAJ,MAAM,CAACc,cAAc,CAACZ,CAAC,CAAEG,EAAE,CAAEE,IAAI,CAAC,CACtC,CAAC,CAAK,SAASL,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,EAAE,CAAE,CACxB,GAAIA,EAAE,GAAKC,SAAS,CAAED,EAAE,CAAGD,CAAC,CAC5BF,CAAC,CAACG,EAAE,CAAC,CAAGF,CAAC,CAACC,CAAC,CAAC,CAChB,CAAE,CAAC,CACH,GAAIW,mBAAkB,CAAI,IAAI,EAAI,IAAI,CAACA,kBAAkB,GAAMf,MAAM,CAACC,MAAM,CAAI,SAASC,CAAC,CAAEc,CAAC,CAAE,CAC3FhB,MAAM,CAACc,cAAc,CAACZ,CAAC,CAAE,SAAS,CAAE,CAAEU,UAAU,CAAE,IAAI,CAAEK,KAAK,CAAED,CAAE,CAAC,CAAC,CACvE,CAAC,CAAI,SAASd,CAAC,CAAEc,CAAC,CAAE,CAChBd,CAAC,CAAC,SAAS,CAAC,CAAGc,CAAC,CACpB,CAAC,CAAC,CACF,GAAIE,aAAY,CAAI,IAAI,EAAI,IAAI,CAACA,YAAY,EAAK,SAAUC,GAAG,CAAE,CAC7D,GAAIA,GAAG,EAAIA,GAAG,CAACV,UAAU,CAAE,MAAOU,IAAG,CACrC,GAAIC,OAAM,CAAG,CAAC,CAAC,CACf,GAAID,GAAG,EAAI,IAAI,CAAE,IAAK,GAAIf,EAAC,GAAIe,IAAG,EAAE,GAAIf,CAAC,GAAK,SAAS,EAAIJ,MAAM,CAACqB,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,GAAG,CAAEf,CAAC,CAAC,CAAEL,eAAe,CAACqB,MAAM,CAAED,GAAG,CAAEf,CAAC,CAAC,CAAC,CACzIW,kBAAkB,CAACK,MAAM,CAAED,GAAG,CAAC,CAC/B,MAAOC,OAAM,CACjB,CAAC,CACD,GAAII,gBAAe,CAAI,IAAI,EAAI,IAAI,CAACA,eAAe,EAAK,SAAUL,GAAG,CAAE,CACnE,MAAQA,IAAG,EAAIA,GAAG,CAACV,UAAU,CAAIU,GAAG,CAAG,CAAE,SAAS,CAAEA,GAAI,CAAC,CAC7D,CAAC,CACDnB,MAAM,CAACc,cAAc,CAACW,OAAO,CAAE,YAAY,CAAE,CAAER,KAAK,CAAE,IAAK,CAAC,CAAC,CAC7D,GAAMS,MAAK,CAAGR,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC,CAAC,CAC5C,GAAMC,YAAW,CAAGJ,eAAe,CAACG,OAAO,eAAe,CAAC,CAC3D,GAAME,cAAa,CAAGL,eAAe,CAACG,OAAO,iBAAiB,CAAC,CAC/D,GAAMG,aAAY,CAAGN,eAAe,CAACG,OAAO,gBAAgB,CAAC,CAC7D,GAAMI,QAAO,CAAG,QAAVA,QAAO,CAAIC,KAAK,CAAK,CACvB,GAAQC,QAAO,CAA8LD,KAAK,CAA1MC,OAAO,CAAEC,WAAW,CAAiLF,KAAK,CAAjME,WAAW,CAAEC,SAAS,CAAsKH,KAAK,CAApLG,SAAS,CAAEC,WAAW,CAAyJJ,KAAK,CAAzKI,WAAW,CAAEC,KAAK,CAAkJL,KAAK,CAA5JK,KAAK,CAAEC,KAAK,CAA2IN,KAAK,CAArJM,KAAK,CAAEC,KAAK,CAAoIP,KAAK,CAA9IO,KAAK,CAAEC,MAAM,CAA4HR,KAAK,CAAvIQ,MAAM,CAAEC,QAAO,CAAmHT,KAAK,CAA/HS,OAAO,CAAEC,OAAO,CAA0GV,KAAK,CAAtHU,OAAO,CAAEC,QAAQ,CAAgGX,KAAK,CAA7GW,QAAQ,CAAEC,QAAQ,CAAsFZ,KAAK,CAAnGY,QAAQ,CAAEC,iBAAiB,CAAmEb,KAAK,CAAzFa,iBAAiB,CAAEC,UAAU,CAAuDd,KAAK,CAAtEc,UAAU,CAAEC,aAAa,CAAwCf,KAAK,CAA1De,aAAa,CAAEC,eAAe,CAAuBhB,KAAK,CAA3CgB,eAAe,CAAEC,eAAe,CAAMjB,KAAK,CAA1BiB,eAAe,CACvM,GAAMC,cAAa,CAAGC,iBAAiB,CAAClB,OAAO,CAACmB,QAAQ,CAAC,CACzD,GAAMC,aAAY,CAAGC,gBAAgB,CAACrB,OAAO,CAACmB,QAAQ,CAAC,CACvD,GAAMG,gBAAe,CAAGC,mBAAmB,CAACvB,OAAO,CAACmB,QAAQ,CAAC,CAC7D,MAAQ,uBAAC,KAAK,CAAC,QAAQ,YACpBF,aAAa,CAACO,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,CAAK,2BACjC,GAAMC,YAAW,CAAGC,QAAQ,CAACxB,KAAK,CAAEqB,OAAO,CAAE,cAAc,CAAC,CAC5D,GAAMI,8BAA6B,CAAG,wBAAAJ,OAAO,CAACK,OAAO,CAACC,UAAU,eAA1B,sBAA4BnB,iBAAiB,GAAIA,iBAAiB,CACxG,MAAQ,sBAAC,WAAW,CAAC,OAAO,EAAa,UAAU,CAAEa,OAAO,CAACO,WAAY,CAAC,iBAAiB,CAAEH,6BAA8B,CAAC,KAAK,CAAEvB,KAAM,CAAC,KAAK,CAAED,KAAM,CAAC,QAAQ,CAAEsB,WAAY,CAAC,MAAM,CAAEpB,MAAO,CAAC,OAAO,CAAE,yBAAMC,SAAO,EAAIA,QAAO,CAACiB,OAAO,CAAC,EAAC,UACzOT,eAAe,EADkBU,KAAK,CAEnB,CACxB,CAAC,CAAC,CACHN,YAAY,CAACI,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,CAAK,CAChC,GAAMO,gBAAe,CAAGL,QAAQ,CAAC3B,WAAW,CAAEwB,OAAO,CAAE,QAAQ,CAAC,CAChE,GAAMS,gBAAe,CAAGC,cAAc,CAAChC,WAAW,CAAEsB,OAAO,CAAC,CAC5D,MAAQ,sBAAC,aAAa,CAAC,OAAO,EAAa,WAAW,CAAEA,OAAO,CAACO,WAAY,CAAC,WAAW,CAAEC,eAAgB,CAAC,WAAW,CAAEC,eAAgB,CAAC,aAAa,CAAEpB,aAAc,CAAC,eAAe,CAAEC,eAAgB,CAAC,OAAO,CAAEN,OAAQ,CAAC,QAAQ,CAAEC,QAAS,CAAC,UAAU,CAAEG,UAAW,CAAC,MAAM,CAAEN,MAAO,CAAC,QAAQ,CAAEI,QAAS,CAAC,OAAO,CAAE,yBAAMH,SAAO,EAAIA,QAAO,CAACiB,OAAO,CAAC,EAAC,EAAlTC,KAAK,CAA+S,CAC5V,CAAC,CAAC,CACHJ,eAAe,CAACE,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,CAAK,CACnC,GAAMU,iBAAgB,CAAGR,QAAQ,CAAC1B,SAAS,CAAEuB,OAAO,CAAE,MAAM,CAAC,CAC7D,GAAMQ,gBAAe,CAAGL,QAAQ,CAAC3B,WAAW,CAAEwB,OAAO,CAAE,QAAQ,CAAC,CAChE,GAAMS,gBAAe,CAAGC,cAAc,CAAChC,WAAW,CAAEsB,OAAO,CAAC,CAC5D,MAAQ,sBAAC,YAAY,CAAC,OAAO,EAAa,WAAW,CAAEA,OAAO,CAACO,WAAY,CAAC,KAAK,CAAEP,OAAO,CAACY,KAAM,CAAC,WAAW,CAAEJ,eAAgB,CAAC,SAAS,CAAEG,gBAAiB,CAAC,WAAW,CAAEF,eAAgB,CAAC,QAAQ,CAAEvB,QAAS,CAAC,OAAO,CAAE,yBAAMH,SAAO,EAAIA,QAAO,CAACiB,OAAO,CAAC,EAAC,CAAC,MAAM,CAAElB,MAAO,EAAvOmB,KAAK,CAAoO,CAChR,CAAC,CAAC,GACW,CACrB,CAAC,CACDlC,OAAO,CAAC8C,OAAO,CAAGxC,OAAO,CACzB,GAAMoB,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,QAAQ,CAAK,CACpC,MAAOA,SAAQ,CACVoB,MAAM,CAACC,iBAAiB,CAAC,CACzBhB,GAAG,CAAC,SAAAM,OAAO,QAAIW,2BAA0B,CAACX,OAAO,CAACY,QAAQ,CAAC,CAAClB,GAAG,CAAC,SAAAQ,WAAW,QAAIW,uBAAsB,CAACX,WAAW,CAAEF,OAAO,CAAC,GAAC,GAAC,CAC7Hc,MAAM,CAAC,SAACC,IAAI,CAAEC,IAAI,QAAKD,KAAI,CAACE,MAAM,CAACD,IAAI,CAAC,GAAE,EAAE,CAAC,CAC7CtB,GAAG,CAAC,SAAAC,OAAO,wCAAUA,OAAO,MAAEuB,IAAI,CAAE,OAAO,IAAG,CAAC,CACxD,CAAC,CACD,GAAM3B,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAIF,QAAQ,CAAK,CACnC,MAAOA,SAAQ,CACVoB,MAAM,CAACU,sBAAsB,CAAC,CAC9BzB,GAAG,CAAC,SAAAM,OAAO,QAAIoB,0BAAyB,CAACpB,OAAO,CAACY,QAAQ,CAAC,CAAClB,GAAG,CAAC,SAAAQ,WAAW,QAAImB,sBAAqB,CAACnB,WAAW,CAAEF,OAAO,CAAC,GAAC,GAAC,CAC3Hc,MAAM,CAAC,SAACC,IAAI,CAAEC,IAAI,QAAKD,KAAI,CAACE,MAAM,CAACD,IAAI,CAAC,GAAE,EAAE,CAAC,CAC7CtB,GAAG,CAAC,SAAAC,OAAO,wCAAUA,OAAO,MAAEuB,IAAI,CAAE,UAAU,IAAG,CAAC,CAC3D,CAAC,CACD,GAAMzB,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIJ,QAAQ,CAAK,CACtC,GAAMiC,cAAa,CAAGjC,QAAQ,CACzBoB,MAAM,CAACc,qBAAqB,CAAC,CAC7B7B,GAAG,CAAC,SAAAM,OAAO,QAAIwB,+BAA8B,CAACxB,OAAO,CAACY,QAAQ,CAAC,CAAClB,GAAG,CAAC,SAAAQ,WAAW,QAAIuB,yBAAwB,CAACvB,WAAW,CAAEF,OAAO,CAAC,GAAC,GAAC,CACnIc,MAAM,CAAC,SAACC,IAAI,CAAEC,IAAI,QAAKD,KAAI,CAACE,MAAM,CAACD,IAAI,CAAC,GAAE,EAAE,CAAC,CAC7CtB,GAAG,CAAC,SAAAC,OAAO,wCAAUA,OAAO,MAAEuB,IAAI,CAAE,SAAS,IAAG,CAAC,CACtD,GAAMQ,SAAQ,CAAGrC,QAAQ,CACpBoB,MAAM,CAACkB,gBAAgB,CAAC,CACxBjC,GAAG,CAAC,SAAAM,OAAO,QAAIyB,yBAAwB,CAACG,yBAAyB,CAAC5B,OAAO,CAACY,QAAQ,CAAC,CAAEZ,OAAO,CAAC,GAAC,CAC9Fc,MAAM,CAAC,SAACC,IAAI,CAAEC,IAAI,QAAKD,KAAI,CAACE,MAAM,CAACD,IAAI,CAAC,GAAE,EAAE,CAAC,CAC7CtB,GAAG,CAAC,SAAAC,OAAO,wCAAUA,OAAO,MAAEuB,IAAI,CAAE,SAAS,IAAG,CAAC,CACtD,MAAOQ,SAAQ,CAACT,MAAM,CAACK,aAAa,CAAC,CACzC,CAAC,CACD,GAAMT,uBAAsB,CAAG,QAAzBA,uBAAsB,CAAIX,WAAW,CAAEF,OAAO,CAAK,CACrD,MAAO,CAAEA,OAAO,CAAPA,OAAO,CAAEE,WAAW,CAAXA,WAAY,CAAC,CACnC,CAAC,CACD,GAAMmB,sBAAqB,CAAG,QAAxBA,sBAAqB,CAAInB,WAAW,CAAEF,OAAO,CAAK,CACpD,MAAO,CAAEA,OAAO,CAAPA,OAAO,CAAEE,WAAW,CAAXA,WAAY,CAAC,CACnC,CAAC,CACD,GAAMuB,yBAAwB,CAAG,QAA3BA,yBAAwB,CAAIvB,WAAW,CAAEF,OAAO,CAAK,CACvD,MAAO,CACHA,OAAO,CAAPA,OAAO,CACPE,WAAW,CAAEA,WAAW,CAAC,CAAC,CAAC,CAC3BK,KAAK,CAAEL,WAAW,CAAC2B,MAAM,CAAG,CAAC,CAAG3B,WAAW,CAAC4B,KAAK,CAAC,CAAC,CAAC,CAAGvF,SAC3D,CAAC,CACL,CAAC,CACD,GAAMwF,UAAS,CAAG,QAAZA,UAAS,CAAIC,CAAC,QAAM,CACtBC,QAAQ,CAAED,CAAC,CAAC,CAAC,CAAC,CACdE,SAAS,CAAEF,CAAC,CAAC,CAAC,CAClB,CAAC,EAAC,CACF,GAAMG,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,CAAC,QAAKA,EAAC,CAAC1C,GAAG,CAACqC,SAAS,CAAC,GACxC,GAAMpB,2BAA0B,CAAG,QAA7BA,2BAA0B,CAAIC,QAAQ,CAAK,CAC7C,GAAIA,QAAQ,CAACM,IAAI,GAAK,OAAO,CAAE,CAC3B,MAAO,CAACa,SAAS,CAACnB,QAAQ,CAACV,WAAW,CAAC,CAAC,CAC5C,CACA,MAAOU,SAAQ,CAACV,WAAW,CAACR,GAAG,CAACqC,SAAS,CAAC,CAC9C,CAAC,CACD,GAAMX,0BAAyB,CAAG,QAA5BA,0BAAyB,CAAIR,QAAQ,CAAK,CAC5C,GAAIA,QAAQ,CAACM,IAAI,GAAK,YAAY,CAAE,CAChC,MAAO,CAACiB,QAAQ,CAACvB,QAAQ,CAACV,WAAW,CAAC,CAAC,CAC3C,CACA,MAAOU,SAAQ,CAACV,WAAW,CAACR,GAAG,CAACyC,QAAQ,CAAC,CAC7C,CAAC,CACD,GAAMP,0BAAyB,CAAG,QAA5BA,0BAAyB,CAAIhB,QAAQ,CAAK,CAC5C,MAAOA,SAAQ,CAACV,WAAW,CAACR,GAAG,CAACyC,QAAQ,CAAC,CAC7C,CAAC,CACD,GAAMX,+BAA8B,CAAG,QAAjCA,+BAA8B,CAAIZ,QAAQ,CAAK,CACjD,MAAOA,SAAQ,CAACV,WAAW,CAACR,GAAG,CAAC,SAAA2C,CAAC,QAAIA,EAAC,CAAC3C,GAAG,CAACyC,QAAQ,CAAC,GAAC,CACzD,CAAC,CACD,GAAMG,eAAc,CAAG,QAAjBA,eAAc,CAAIC,GAAG,CAAgB,IAAdC,MAAK,2DAAG,CAAC,CAClC,GAAMC,WAAU,CAAGF,GAAG,CAACG,KAAK,CAAC,OAAO,CAAC,CACrC,GAAI,CAACD,UAAU,EAAIA,UAAU,CAACZ,MAAM,CAAG,CAAC,CAAE,CACtC,KAAM,IAAIc,MAAK,CAAC,oBAAoB,CAAC,CACzC,CACA,oBAAkBF,UAAU,CAAC/C,GAAG,CAAC,SAAAkD,CAAC,CAAI,CAClC,GAAMC,SAAQ,CAAGC,QAAQ,CAACF,CAAC,CAAE,EAAE,CAAC,CAChC,GAAIG,MAAM,CAACC,KAAK,CAACH,QAAQ,CAAC,CAAE,CACxB,KAAM,IAAIF,MAAK,CAAC,oBAAoB,CAAC,CACzC,CACA,MAAOE,SAAQ,CACnB,CAAC,CAAC,oDANKI,CAAC,qBAAEC,CAAC,qBAAEC,CAAC,qBAOd,cAAeF,CAAC,KAAIC,CAAC,KAAIC,CAAC,KAAIX,KAAK,KACvC,CAAC,CACD,GAAM1C,SAAQ,CAAG,QAAXA,SAAQ,CAAIsD,IAAI,CAAEzD,OAAO,CAAE0D,SAAS,CAAK,4BAC3C,GAAID,IAAI,CAAE,CACN,MAAOA,KAAI,CACf,CACA,GAAI9E,MAAK,yBAAGqB,OAAO,CAACK,OAAO,CAACC,UAAU,eAA1B,uBAA6BoD,SAAS,CAAC,CACnD,GAAI/E,KAAK,CAAE,4BACP,GAAMgF,gBAAe,CAAGD,SAAS,CAAG,UAAU,CAC9C,GAAMb,MAAK,yBAAG7C,OAAO,CAACK,OAAO,CAACC,UAAU,eAA1B,uBAA6BqD,eAAe,CAAC,CAC3D,GAAId,KAAK,EAAIA,KAAK,GAAK,GAAG,EAAIlE,KAAK,CAAC,CAAC,CAAC,GAAK,GAAG,CAAE,CAC5CA,KAAK,CAAGgE,cAAc,CAAChE,KAAK,CAAEkE,KAAK,CAAC,CACxC,CACA,MAAOlE,MAAK,CAChB,CACA,MAAO/B,UAAS,CACpB,CAAC,CACD,GAAM8D,eAAc,CAAG,QAAjBA,eAAc,CAAI+C,IAAI,CAAEzD,OAAO,CAAK,4BACtC,GAAIyD,IAAI,CAAE,CACN,MAAOA,KAAI,CACf,CACA,8BAAOzD,OAAO,CAACK,OAAO,CAACC,UAAU,eAA1B,uBAA6B,cAAc,CAAC,CACvD,CAAC,CAED,GAAMsD,eAAc,CAAG,QAAjBA,eAAc,CAAIvD,OAAO,QAAKA,QAAO,CAACY,QAAQ,CAACM,IAAI,GAAK,OAAO,GACrE,GAAMsC,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIxD,OAAO,QAAKA,QAAO,CAACY,QAAQ,CAACM,IAAI,GAAK,YAAY,GAC/E,GAAMR,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIV,OAAO,QAAKuD,eAAc,CAACvD,OAAO,CAAC,EAAIwD,mBAAmB,CAACxD,OAAO,CAAC,GAC9F,GAAMyD,oBAAmB,CAAG,QAAtBA,oBAAmB,CAAIzD,OAAO,QAAKA,QAAO,CAACY,QAAQ,CAACM,IAAI,GAAK,YAAY,GAC/E,GAAMwC,yBAAwB,CAAG,QAA3BA,yBAAwB,CAAI1D,OAAO,QAAKA,QAAO,CAACY,QAAQ,CAACM,IAAI,GAAK,iBAAiB,GACzF,GAAMC,uBAAsB,CAAG,QAAzBA,uBAAsB,CAAInB,OAAO,QAAKyD,oBAAmB,CAACzD,OAAO,CAAC,EAAI0D,wBAAwB,CAAC1D,OAAO,CAAC,GAC7G,GAAM2B,iBAAgB,CAAG,QAAnBA,iBAAgB,CAAI3B,OAAO,QAAKA,QAAO,CAACY,QAAQ,CAACM,IAAI,GAAK,SAAS,GACzE,GAAMK,sBAAqB,CAAG,QAAxBA,sBAAqB,CAAIvB,OAAO,QAAKA,QAAO,CAACY,QAAQ,CAACM,IAAI,GAAK,cAAc"},"metadata":{},"sourceType":"script"}